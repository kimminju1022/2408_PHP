/* 
가상 선택자(ㅖseudo selector)
html 요소의 상태에 따라 선택해서 스타일을 지정하는 선택자 
기본형태) 선택자 : 가상클래스명
*/
a:link{
    /* 한번도 방문한 적이 없는 링크요소 선택해서 적용값을 표시
    쿠키, 기록 싹지우면 다 방문한적 없는걸로 표시됨 */
    color: red
}

/* 한번이라도 방문했던 링크요소 선택 */
a:visited{
    color: green;
}

/* 마우스가 올라가 있는 요소를 선택, 원하는 태그가 있다면 ,하고 옆에 기재 */
a:hover{
color: aqua;  
}

/* 링크를 클릭하고 있는 요소를 선택 */
a:active{
    font-size: 5rem;
}
/* p{
    display: none;
} */
h1:hover + p{
    display: block;
}
/* h1에 커서를 올리면 p에 입력한 내용이 보이게 하는 기능 */

/* 포커스가 적용되어 있는 요소를 선택 */
input:focus {
    border: 3px solid green;
    outline: none;
}
/* input{
    width: 100px;
} */

/* 체크된 상태의 input요소를 선택 */
input:checked + label{
    background-color: cadetblue;
}

/* 문서 내부 링크의 활성화 된 요소를 */
#p1:target{
    background-color: bisque;
}
#p2:target{
    background-color: chocolate;
}

/*  해당 선택자의 요소를 제외한 나머지 요소에 스타일을 적용 */
.container :not(p) {
/* color: red; */
}

/* n번째 자식에게 적용하는 방법 ಠ_ಠ띄어쓰기 잘 하기!! */
.container :nth-child(3){
    color: blue;
}

/* n번째 자식요소 부터 적용하는 방법 
n : 해당 자식요소 부터
-n : 해당 자식 까지
*/
.container :nth-child(-n + 5){
    color: brown;
}

.container :nth-child(n + 2):nth-child(-n + 4) {
color: pink;
}

/* 짝수 또는 홀수 순서의 자식 요소에 스타일 적용 */
.container :nth-child(odd){
    background-color: rgb(151, 252, 151);
}

/* 부모요소 내에서 특정유형의 n번째 자식을 선택 */
.container p:nth-of-type(2){
    font-size: 2rem;
}